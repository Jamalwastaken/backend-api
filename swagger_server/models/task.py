# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Task(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, task_id: int=None, title: str=None, description: str=None, start_date: datetime=None, end_date: datetime=None, completed_at: datetime=None, author_id: int=None):  # noqa: E501
        """Task - a model defined in Swagger

        :param task_id: The task_id of this Task.  # noqa: E501
        :type task_id: int
        :param title: The title of this Task.  # noqa: E501
        :type title: str
        :param description: The description of this Task.  # noqa: E501
        :type description: str
        :param start_date: The start_date of this Task.  # noqa: E501
        :type start_date: datetime
        :param end_date: The end_date of this Task.  # noqa: E501
        :type end_date: datetime
        :param completed_at: The completed_at of this Task.  # noqa: E501
        :type completed_at: datetime
        :param author_id: The author_id of this Task.  # noqa: E501
        :type author_id: int
        """
        self.swagger_types = {
            'task_id': int,
            'title': str,
            'description': str,
            'start_date': datetime,
            'end_date': datetime,
            'completed_at': datetime,
            'author_id': int
        }

        self.attribute_map = {
            'task_id': 'task_id',
            'title': 'title',
            'description': 'description',
            'start_date': 'start_date',
            'end_date': 'end_date',
            'completed_at': 'completed_at',
            'author_id': 'author_id'
        }
        self._task_id = task_id
        self._title = title
        self._description = description
        self._start_date = start_date
        self._end_date = end_date
        self._completed_at = completed_at
        self._author_id = author_id

    @classmethod
    def from_dict(cls, dikt) -> 'Task':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Task of this Task.  # noqa: E501
        :rtype: Task
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_id(self) -> int:
        """Gets the task_id of this Task.


        :return: The task_id of this Task.
        :rtype: int
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id: int):
        """Sets the task_id of this Task.


        :param task_id: The task_id of this Task.
        :type task_id: int
        """

        self._task_id = task_id

    @property
    def title(self) -> str:
        """Gets the title of this Task.


        :return: The title of this Task.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Task.


        :param title: The title of this Task.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this Task.


        :return: The description of this Task.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Task.


        :param description: The description of this Task.
        :type description: str
        """

        self._description = description

    @property
    def start_date(self) -> datetime:
        """Gets the start_date of this Task.


        :return: The start_date of this Task.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: datetime):
        """Sets the start_date of this Task.


        :param start_date: The start_date of this Task.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self) -> datetime:
        """Gets the end_date of this Task.


        :return: The end_date of this Task.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: datetime):
        """Sets the end_date of this Task.


        :param end_date: The end_date of this Task.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def completed_at(self) -> datetime:
        """Gets the completed_at of this Task.


        :return: The completed_at of this Task.
        :rtype: datetime
        """
        return self._completed_at

    @completed_at.setter
    def completed_at(self, completed_at: datetime):
        """Sets the completed_at of this Task.


        :param completed_at: The completed_at of this Task.
        :type completed_at: datetime
        """

        self._completed_at = completed_at

    @property
    def author_id(self) -> int:
        """Gets the author_id of this Task.


        :return: The author_id of this Task.
        :rtype: int
        """
        return self._author_id

    @author_id.setter
    def author_id(self, author_id: int):
        """Sets the author_id of this Task.


        :param author_id: The author_id of this Task.
        :type author_id: int
        """

        self._author_id = author_id
